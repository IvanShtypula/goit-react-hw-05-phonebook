{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","App.module.css","reverseTransition.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","ContactForm","formInitialState","name","number","sameName","state","handleSubmit","event","preventDefault","contacts","props","value","target","some","contact","setState","setTimeout","timeOutAlert","addContact","handleInput","this","className","formStyle","onSubmit","CSSTransition","classNames","in","timeout","unmountOnExit","alertModal","htmlFor","type","id","placeholder","onChange","Component","Filter","contactsFilter","styleFilter","filterWrap","filterTitle","ContactList","deleteContact","removeContact","styleList","onClick","App","filter","showTitle","uuid","prevState","getFilteredContacts","toLowerCase","includes","lastContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","filteredContacts","styleApp","container","titleStyle","title","length","TransitionGroup","component","contactsList","map","key","ReactDOM","render","document","getElementById"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,mBAAqB,wCAAwC,mBAAqB,wCAAwC,oBAAsB,yCAAyC,WAAa,kC,wBCAvQD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,iBAAiB,oCAAoC,mBAAmB,sCAAsC,mBAAmB,wC,kBCA9LD,EAAOC,QAAU,CAAC,aAAe,6BAA6B,YAAc,8B,gBCA5ED,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,mBAAmB,aAAe,4B,iBCA/FD,EAAOC,QAAU,CAAC,YAAc,uCAAuC,KAAO,gCAAgC,WAAa,sCAAsC,MAAQ,mC,8PC0G1JC,G,kNArGbC,iBAAmB,CACjBC,KAAM,GACNC,OAAQ,GACRC,UAAU,G,EAGZC,M,eACK,EAAKJ,kB,EAGVK,aAAe,SAACC,GACdA,EAAMC,iBAEN,IAAMC,EAAW,EAAKC,MAAMD,SACtBE,EAAQJ,EAAMK,OAAOV,KAAKS,MAEhC,GAAIF,EAASI,MAAK,SAACC,GAAD,OAAaA,EAAQZ,OAASS,KAQ9C,OAPA,EAAKI,SAAS,CACZb,KAAM,GACNC,OAAQ,GACRC,UAAU,SAGZY,WAAW,EAAKC,aAAc,MAIhC,IAAMf,EAAO,EAAKG,MAAMH,KAClBC,EAAS,EAAKE,MAAMF,OAC1B,EAAKO,MAAMQ,WAAWhB,EAAMC,GAE5B,EAAKY,SAAS,CACZb,KAAM,GACNC,OAAQ,M,EAIZc,aAAe,WACb,EAAKF,SAAS,CACZX,UAAU,K,EAIde,YAAc,YAAiB,IAAdP,EAAa,EAAbA,OACPV,EAAgBU,EAAhBV,KAAMS,EAAUC,EAAVD,MACd,EAAKI,SAAL,eACGb,EAAOS,K,uDAIF,IAAD,EAC4BS,KAAKf,MAAhCH,EADD,EACCA,KAAMC,EADP,EACOA,OAAQC,EADf,EACeA,SAEtB,OACE,0BACEiB,UAAWC,IAAS,YAEpBC,SAAUH,KAAKd,cAEf,kBAACkB,EAAA,EAAD,CACEC,WAAW,cACXC,GAAItB,EACJuB,QAAS,IACTC,eAAa,GAEb,yBAAKP,UAAWC,IAAUO,YAA1B,2BAGF,2BAAOC,QAAQ,OAAOT,UAAWC,IAAS,oBAA1C,QAGA,2BACED,UAAWC,IAAS,mBACpBS,KAAK,OACL7B,KAAK,OACL8B,GAAG,OACHC,YAAY,qBACZtB,MAAOT,EACPgC,SAAUd,KAAKD,cAEjB,2BAAOW,QAAQ,SAAST,UAAWC,IAAS,oBAA5C,UAGA,2BACED,UAAWC,IAAS,mBACpBS,KAAK,MACL7B,KAAK,SACL8B,GAAG,SACHC,YAAY,uBACZtB,MAAOR,EACP+B,SAAUd,KAAKD,cAGjB,4BAAQE,UAAWC,IAAS,oBAAyBS,KAAK,UAA1D,oB,GA9FkBI,c,iBCYXC,EAdA,SAAC,GAA6B,IAA5BzB,EAA2B,EAA3BA,MAAO0B,EAAoB,EAApBA,eACtB,OACE,yBAAKhB,UAAWiB,IAAYC,YAC1B,wBAAIlB,UAAWiB,IAAYE,aAA3B,gBACC,2BACGT,KAAK,OACLV,UAAWiB,IAAW,aACtB3B,MAAOA,EACPuB,SAAUG,M,iBCaLI,E,4MApBbC,cAAgB,WACd,EAAKhC,MAAMiC,cAAc,EAAKjC,MAAMsB,K,uDAE5B,IAAD,EACkBZ,KAAKV,MAAtBR,EADD,EACCA,KAAMC,EADP,EACOA,OACd,OACE,wBAAIkB,UAAWuB,IAAS,WACtB,uBAAGvB,UAAWuB,IAAU,mBAAoB1C,EAA5C,MACA,uBAAGmB,UAAWuB,IAAU,qBAAxB,IAA+CzC,GAC/C,4BACE0C,QAASzB,KAAKsB,cACdrB,UAAWuB,IAAU,qBAFvB,a,GAVkBT,a,kCC6FXW,E,4MAtFbzC,MAAQ,CACNI,SAAU,GACVsC,OAAQ,GACRC,WAAW,G,EAqBb9B,WAAa,SAAChB,EAAMC,GAClB,IAAMW,EAAU,CACdkB,GAAIiB,iBACJ/C,KAAMA,EACNC,OAAQA,GAEV,EAAKY,UAAS,SAACmC,GACb,MAAO,CACLzC,SAAS,GAAD,mBAAMyC,EAAUzC,UAAhB,CAA0BK,S,EAKxC6B,cAAgB,SAACX,GACf,EAAKjB,UAAS,SAACmC,GAAD,MAAgB,CAC5BzC,SAAUyC,EAAUzC,SAASsC,QAAO,SAACjC,GAAD,OAAaA,EAAQkB,KAAOA,U,EAIpEK,eAAiB,SAAC9B,GAChB,IAAMwC,EAASxC,EAAMK,OAAOD,MAC5B,EAAKI,SAAS,CAAEgC,Y,EAGlBI,oBAAsB,WAAO,IAAD,EACG,EAAK9C,MAA1BI,EADkB,EAClBA,SAAUsC,EADQ,EACRA,OAClB,OAAOtC,EAASsC,QAAO,SAACjC,GAAD,OACrBA,EAAQZ,KAAKkD,cAAcC,SAASN,EAAOK,mB,kEA5C7C,IAAME,EAAeC,aAAaC,QAAQ,YACtCF,GACFlC,KAAKL,SAAS,CACZN,SAAUgD,KAAKC,MAAMJ,KAGzBlC,KAAKL,SAAS,CACZiC,WAAW,M,yCAIIW,EAAWT,GACxBA,EAAUzC,WAAaW,KAAKf,MAAMI,UACpC8C,aAAaK,QAAQ,WAAYH,KAAKI,UAAUzC,KAAKf,MAAMI,a,+BAmCrD,IAAD,SACiCW,KAAKf,MAArCI,EADD,EACCA,SAAUsC,EADX,EACWA,OAAQC,EADnB,EACmBA,UACpBc,EAAmB1C,KAAK+B,sBAC9B,OACE,yBAAK9B,UAAW0C,IAASC,WACvB,kBAACxC,EAAA,EAAD,CAAeC,WAAYwC,IAAYvC,GAAIsB,EAAWrB,QAAS,KAC7D,wBAAIN,UAAW0C,IAASG,OAAxB,cAGF,kBAAC,EAAD,CAAahD,WAAYE,KAAKF,WAAYT,SAAUA,IAEnDA,EAAS0D,OAAS,GACjB,kBAAC,EAAD,CAAQ9B,eAAgBjB,KAAKiB,eAAgB1B,MAAOoC,IAEtD,wCACA,kBAACqB,EAAA,EAAD,CAAiBC,UAAU,KAAKhD,UAAW0C,IAASO,cACnDR,EAAiBK,OAAS,GACzBL,EAAiBS,KAAI,SAACzD,GAAD,OACnB,kBAACU,EAAA,EAAD,CAAegD,IAAK1D,EAAQkB,GAAIP,WAAYwC,IAAYtC,QAAS,KAC/D,kBAAC,EAAD,iBACMb,EADN,CAEE6B,cAAe,EAAKA,2B,GA7ElBR,aCJlBsC,IAASC,OACP,oCACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.fcc8978f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__Diw8Z\",\"contactForm__label\":\"ContactForm_contactForm__label__1-gzR\",\"contactForm__input\":\"ContactForm_contactForm__input__HSjt8\",\"contactForm__submit\":\"ContactForm_contactForm__submit__2NyIc\",\"alertModal\":\"ContactForm_alertModal__24-wP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_item\":\"ContactList_list_item__3qVMX\",\"list_item-name\":\"ContactList_list_item-name__1kG8Y\",\"list_item-number\":\"ContactList_list_item-number__uzPMZ\",\"list_item-button\":\"ContactList_list_item-button__1ls9i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_input\":\"Filter_filter_input__26QnV\",\"filterTitle\":\"Filter_filterTitle__6vXbx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__18Fyz\",\"title\":\"App_title__3XVki\",\"contactsList\":\"App_contactsList__3HLV_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enterActive\":\"reverseTransition_enterActive__25yUu\",\"task\":\"reverseTransition_task__3iCtj\",\"exitActive\":\"reverseTransition_exitActive__3mLbY\",\"hinge\":\"reverseTransition_hinge__3itBk\"};","import React, { Component } from \"react\";\r\nimport formStyle from \"./ContactForm.module.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"./ContactForm.css\";\r\n\r\nclass ContactForm extends Component {\r\n  formInitialState = {\r\n    name: \"\",\r\n    number: \"\",\r\n    sameName: false,\r\n  };\r\n\r\n  state = {\r\n    ...this.formInitialState,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const contacts = this.props.contacts;\r\n    const value = event.target.name.value;\r\n\r\n    if (contacts.some((contact) => contact.name === value)) {\r\n      this.setState({\r\n        name: \"\",\r\n        number: \"\",\r\n        sameName: true,\r\n      });\r\n      // return alert(`${value} is already in contacts.`);\r\n      setTimeout(this.timeOutAlert, 1500);\r\n      return;\r\n    }\r\n\r\n    const name = this.state.name;\r\n    const number = this.state.number;\r\n    this.props.addContact(name, number);\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  timeOutAlert = () => {\r\n    this.setState({\r\n      sameName: false,\r\n    });\r\n  };\r\n\r\n  handleInput = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number, sameName } = this.state;\r\n\r\n    return (\r\n      <form\r\n        className={formStyle[\"contactForm\"]}\r\n        // autoComplete=\"off\"\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <CSSTransition\r\n          classNames=\"alertWindow\"\r\n          in={sameName}\r\n          timeout={1000}\r\n          unmountOnExit\r\n        >\r\n          <div className={formStyle.alertModal}>Contact already exist!</div>\r\n        </CSSTransition>\r\n\r\n        <label htmlFor=\"name\" className={formStyle[\"contactForm__label\"]}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className={formStyle[\"contactForm__input\"]}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          placeholder=\"   Enter your name\"\r\n          value={name}\r\n          onChange={this.handleInput}\r\n        />\r\n        <label htmlFor=\"number\" className={formStyle[\"contactForm__label\"]}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className={formStyle[\"contactForm__input\"]}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          id=\"Number\"\r\n          placeholder=\"   Enter your number\"\r\n          value={number}\r\n          onChange={this.handleInput}\r\n        />\r\n\r\n        <button className={formStyle[\"contactForm__submit\"]} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport styleFilter from \"./Filter.module.css\";\r\n\r\nconst Filter = ({value, contactsFilter}) => {\r\n  return (\r\n    <div className={styleFilter.filterWrap}>\r\n      <h3 className={styleFilter.filterTitle}>Find by name</h3>\r\n       <input\r\n          type=\"text\"\r\n          className={styleFilter[\"filter_input\"]}\r\n          value={value}\r\n          onChange={contactsFilter}\r\n        ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\nimport styleList from \"./ContactList.module.css\";\r\n\r\nclass ContactList extends Component {\r\n  deleteContact = () => {    \r\n    this.props.removeContact(this.props.id);\r\n  };\r\n  render() {\r\n    const { name, number } = this.props;\r\n    return (\r\n      <li className={styleList[\"list_item\"]}>\r\n        <p className={styleList[\"list_item-name\"]}>{name}: </p>\r\n        <p className={styleList[\"list_item-number\"]}> {number}</p>\r\n        <button\r\n          onClick={this.deleteContact}\r\n          className={styleList[\"list_item-button\"]}\r\n        >\r\n          &times;\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\nimport { uuid } from \"uuidv4\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport ContactForm from \"./components/ContactForm/ContactForm.js\";\nimport Filter from \"./components/Filter/Filter.js\";\nimport ContactList from \"./components/ContactList/ContactList.js\";\nimport styleApp from \"./App.module.css\";\nimport titleStyle from \"./reverseTransition.module.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n    showTitle: false,\n  };\n\n  componentDidMount() {\n    const lastContacts = localStorage.getItem(\"contacts\");\n    if (lastContacts) {\n      this.setState({\n        contacts: JSON.parse(lastContacts),\n      });\n    }\n    this.setState({\n      showTitle: true,\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (name, number) => {\n    const contact = {\n      id: uuid(),\n      name: name,\n      number: number,\n    };\n    this.setState((prevState) => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n\n  removeContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  contactsFilter = (event) => {\n    const filter = event.target.value;\n    this.setState({ filter });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  render() {\n    const { contacts, filter, showTitle } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n    return (\n      <div className={styleApp.container}>\n        <CSSTransition classNames={titleStyle} in={showTitle} timeout={800}>\n          <h1 className={styleApp.title}>Phonebook</h1>\n        </CSSTransition>\n\n        <ContactForm addContact={this.addContact} contacts={contacts} />\n\n        {contacts.length > 1 && (\n          <Filter contactsFilter={this.contactsFilter} value={filter} />\n        )}\n        <h2>Contacts</h2>\n        <TransitionGroup component=\"ul\" className={styleApp.contactsList}>\n        {filteredContacts.length > 0 &&\n          filteredContacts.map((contact) => (\n            <CSSTransition key={contact.id} classNames={titleStyle} timeout={800}>\n              <ContactList                \n                {...contact}\n                removeContact={this.removeContact}\n              />\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}